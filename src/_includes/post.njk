{% extends "base.njk" %}

{% block title %}{{ title }}{% endblock %}

{% block content %}
  <link rel="stylesheet" href="/styles/style.css">
  <div class="container">
    <div class="extended">
      {% if lang == "en" %}
        <a href="/en/">Insights</a>
      {% else %}
        <a href="/">Insights</a>
      {% endif %}
    </div>
    
    <main id="article">
      <h1>{{ title }}</h1>
      {% if authors %}
        <div class="extended">
          Auteur : {{ authors }}
          <a href="/about/" class="no-hover-effect">
            <img src="/images/ic/i-networking.png" alt="Networking Icon" title="Networking Icon" style="width: 30px; height: auto;">
          </a>
          {% if date %}
            <div class="article-date">
              Publié le : {{ date | date("dd/MM/yyyy") }}
            </div>
            <div class="article-recommendation">
              <span>Article recommandé :</span>
              <button class="recommend-button" onclick="handleRecommendClick()">
                <img src="/images/ic/i-value.png" alt="Networking Icon" title="Networking Icon" width="24" height="24">
                <span class="recommend-count" id="recommend-count">0</span>
              </button>
            </div>
          {% endif %}
        </div>
      {% endif %}

      {{ content | safe }}
      <br>

      <div class="article-recommendation">
        <span class="recommendation-text">
          Si l'article a été utile, recommandez-le :
        </span>
        <button class="recommend-button" onclick="handleRecommendClick()">
          <img src="/images/ic/i-value.png" alt="Recommander" width="24" height="24">
          <span class="recommend-count" id="recommend-count-bottom">0</span>
        </button>
      </div>

      <div class="share-container">
        <h3>Partagez cet article :</h3>
        <a href="https://www.linkedin.com/shareArticle?url={url}" target="_blank" class="linkedin linkedin-icon">
          <img src="/images/ic/i-linkedin.png" alt="LinkedIn Icon" title="Partagez sur LinkedIn">
          <span>LinkedIn</span>
        </a>
      </div>
    </main>
  </div>


<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="/js/env.js"></script>

<script>
    const articleID = "{{ articleID }}";
    const title = "{{ title }}";

    document.addEventListener('DOMContentLoaded', async () => {
        try {
            const response = await fetchRecommendationCount(articleID);
            if (response) {
                const totalRecommendations = response.fields.Recommendations || 0;
                updateRecommendationCount(totalRecommendations);
            } else {
                // Si l'enregistrement n'est pas trouvé, créer un nouvel enregistrement
                await recommendArticle(articleID, title, 0);
            }
        } catch (error) {
            console.error("Error fetching recommendation count:", error);
        }
    });

    async function fetchRecommendationCount(articleID) {
        const url = buildAirtableUrl(articleID);

        try {
            const response = await axios.get(url, {
                headers: {
                    Authorization: `Bearer ${window.env.AIRTABLE_API_KEY}`,
                },
            });

            if (response.data.records.length > 0) {
                return response.data.records[0];
            } else {
                console.warn('Record not found in Airtable. Creating a new record.');
                return null;
            }
        } catch (error) {
            if (error.response && error.response.status === 404) {
                console.warn('Record not found in Airtable. Preparing to create a new record.');
                return null;
            } else {
                throw error;
            }
        }
    }

    function handleRecommendClick() {
        const likedArticles = JSON.parse(localStorage.getItem('likedArticles')) || [];

        if (likedArticles.includes(articleID)) {
            return;
        }

        likedArticles.push(articleID);
        localStorage.setItem('likedArticles', JSON.stringify(likedArticles));

        const topCountElement = document.getElementById('recommend-count');
        const bottomCountElement = document.getElementById('recommend-count-bottom');
        let recommendCount = parseInt(topCountElement.textContent) + 1;

        updateRecommendationCount(recommendCount);
        recommendArticle(articleID, title, recommendCount);
    }

    function updateRecommendationCount(count) {
        const topCountElement = document.getElementById('recommend-count');
        const bottomCountElement = document.getElementById('recommend-count-bottom');

        if (topCountElement && bottomCountElement) {
            topCountElement.textContent = count;
            bottomCountElement.textContent = count;
        }
    }

    async function recommendArticle(articleID, title, recommendCount) {
        const recordURL = `https://api.airtable.com/v0/${window.env.AIRTABLE_BASE_ID}/${window.env.AIRTABLE_TABLE_NAME}`;

        try {
            const dateNow = new Date().toISOString().split('T')[0];

            const postData = {
                fields: {
                    articleID: articleID,
                    Title: title,
                    Recommendations: recommendCount,
                    "Last-Recommended-By": "Un utilisateur unique",
                    "Date of Last Recommendation": dateNow,
                },
            };

            await axios.post(
                recordURL,
                postData,
                {
                    headers: {
                        Authorization: `Bearer ${window.env.AIRTABLE_API_KEY}`,
                    },
                }
            );
        } catch (error) {
            console.error("Error recommending article:", error);
        }
    }

    function buildAirtableUrl(articleID) {
        const recordURL = `https://api.airtable.com/v0/${window.env.AIRTABLE_BASE_ID}/${window.env.AIRTABLE_TABLE_NAME}`;
        const filterFormula = `filterByFormula=articleID="${articleID}"`;
        return `${recordURL}?${filterFormula}`;
    }
</script>


{% endblock %}
